/*****************************************************************************

        Float.otd
        Copyright (c) 2015 Ohm Force

*****************************************************************************/



\class {Float}
\inherit {BasicType}
\header {flip/Float.h}
\declaration ***
class Float;
***

\code {flip::Float} is a type that represents a 64-bit floating point value.



/*\\\ METHODS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

\constructor {}
\brief {Constructs the \code {Float}}

\codeblock [language=c++] ***
Float ();                     (1)
Float (const Float & other);  (2)
Float (double value);         (3)
***

\enumerate {
\item {Default constructor, constructs with a \code {0.0} value.}
\item {Copy constructor. Constructs the object with the value of \code {other}.}
\item {Constructor. Constructs the object with \code {value}.}
}

\warning {Variant 3 of the constructor cannot be called from the default constructor
of a flip object.}

//----------------------------------------------------------------------------

\destructor {}
\brief {Destructs the \code {Float}}

\codeblock [language=c++] ***
~Float ();
***

Destructor.

//----------------------------------------------------------------------------

\method {operator =}
\brief {Assigns value}

\codeblock [language=c++] ***
Float & operator = (const Float & other);    (1)
Float & operator = (double value);           (2)
***

\enumerate {
\item {Copy assignment operator.}
\item {Assignment operator. Assigns the object with \code {value}.}
}



/*\\\ DIVISION \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

#include "Type.methods.otd"



/*\\\ DIVISION \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

\division {Value Access}

\method {operator double}
\brief {Returns the current value of the object}

\codeblock [language=c++] ***
operator double () const;
***

Returns the current value of the object.

//----------------------------------------------------------------------------

\method {before}
\brief {Returns the previous value of the object}

\codeblock [language=c++] ***
double   before () const;
***

Returns the previous value of the object.



/*\\\ DIVISION \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

\division {Comparaison}

\method {operator ==}
\brief {Returns \code {true} \emph {iff} objects current values are equal}

\codeblock [language=c++] ***
bool  operator == (const Float & rhs) const;
bool  operator == (double rhs) const;
***

//----------------------------------------------------------------------------

\method {operator !=}
\brief {Returns \code {true} \emph {iff} objects current values are different}

\codeblock [language=c++] ***
bool  operator != (const Float & rhs) const;
bool  operator != (double rhs) const;
***


